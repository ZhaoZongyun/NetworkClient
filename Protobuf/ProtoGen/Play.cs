// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: play.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProtobufGen {

  /// <summary>Holder for reflection information generated from play.proto</summary>
  public static partial class PlayReflection {

    #region Descriptor
    /// <summary>File descriptor for play.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpwbGF5LnByb3RvEgtQcm90b2J1ZkdlbiIyCgxSZXNIYW5kQ2FyZHMSDwoH",
            "cmVxQ29kZRgBIAEoBRIRCgloYW5kQ2FyZHMYAiADKAUiLwoTUmVzV2lsbENh",
            "bGxCb3NzU2VhdBIYChB3aWxsQ2FsbEJvc3NTZWF0GAEgASgFIh4KC1JlcUNh",
            "bGxCb3NzEg8KB3JlcUNvZGUYASABKAUiPgoLUmVzQ2FsbEJvc3MSDAoEc2Vh",
            "dBgBIAEoBRIPCgdyZXNDb2RlGAIgASgFEhAKCGJvc3NTZWF0GAMgASgFIiAK",
            "C1Jlc0hvbGRDYXJkEhEKCWhvbGVDYXJkcxgBIAMoBSIbCgtSZXNQdXNoU2Vh",
            "dBIMCgRzZWF0GAEgASgFIiAKC1JlcVB1c2hDYXJkEhEKCXB1c2hDYXJkcxgC",
            "IAMoBSIuCgtSZXNQdXNoQ2FyZBIMCgRzZWF0GAEgASgFEhEKCXB1c2hDYXJk",
            "cxgDIAMoBSINCgtSZXFQYXNzQ2FyZCIbCgtSZXNQYXNzQ2FyZBIMCgRzZWF0",
            "GAEgASgFIg0KC1Jlc0dhbWVPdmVyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtobufGen.ResHandCards), global::ProtobufGen.ResHandCards.Parser, new[]{ "ReqCode", "HandCards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtobufGen.ResWillCallBossSeat), global::ProtobufGen.ResWillCallBossSeat.Parser, new[]{ "WillCallBossSeat" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtobufGen.ReqCallBoss), global::ProtobufGen.ReqCallBoss.Parser, new[]{ "ReqCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtobufGen.ResCallBoss), global::ProtobufGen.ResCallBoss.Parser, new[]{ "Seat", "ResCode", "BossSeat" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtobufGen.ResHoldCard), global::ProtobufGen.ResHoldCard.Parser, new[]{ "HoleCards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtobufGen.ResPushSeat), global::ProtobufGen.ResPushSeat.Parser, new[]{ "Seat" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtobufGen.ReqPushCard), global::ProtobufGen.ReqPushCard.Parser, new[]{ "PushCards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtobufGen.ResPushCard), global::ProtobufGen.ResPushCard.Parser, new[]{ "Seat", "PushCards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtobufGen.ReqPassCard), global::ProtobufGen.ReqPassCard.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtobufGen.ResPassCard), global::ProtobufGen.ResPassCard.Parser, new[]{ "Seat" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtobufGen.ResGameOver), global::ProtobufGen.ResGameOver.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///下发手牌变化
  /// </summary>
  public sealed partial class ResHandCards : pb::IMessage<ResHandCards> {
    private static readonly pb::MessageParser<ResHandCards> _parser = new pb::MessageParser<ResHandCards>(() => new ResHandCards());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResHandCards> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtobufGen.PlayReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResHandCards() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResHandCards(ResHandCards other) : this() {
      reqCode_ = other.reqCode_;
      handCards_ = other.handCards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResHandCards Clone() {
      return new ResHandCards(this);
    }

    /// <summary>Field number for the "reqCode" field.</summary>
    public const int ReqCodeFieldNumber = 1;
    private int reqCode_;
    /// <summary>
    ///手牌变化类型（1 减少 2 增加）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReqCode {
      get { return reqCode_; }
      set {
        reqCode_ = value;
      }
    }

    /// <summary>Field number for the "handCards" field.</summary>
    public const int HandCardsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_handCards_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> handCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///变化的手牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> HandCards {
      get { return handCards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResHandCards);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResHandCards other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReqCode != other.ReqCode) return false;
      if(!handCards_.Equals(other.handCards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReqCode != 0) hash ^= ReqCode.GetHashCode();
      hash ^= handCards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReqCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqCode);
      }
      handCards_.WriteTo(output, _repeated_handCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReqCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReqCode);
      }
      size += handCards_.CalculateSize(_repeated_handCards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResHandCards other) {
      if (other == null) {
        return;
      }
      if (other.ReqCode != 0) {
        ReqCode = other.ReqCode;
      }
      handCards_.Add(other.handCards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReqCode = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            handCards_.AddEntriesFrom(input, _repeated_handCards_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///下发叫地主座次（一人只能叫一次）
  /// </summary>
  public sealed partial class ResWillCallBossSeat : pb::IMessage<ResWillCallBossSeat> {
    private static readonly pb::MessageParser<ResWillCallBossSeat> _parser = new pb::MessageParser<ResWillCallBossSeat>(() => new ResWillCallBossSeat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResWillCallBossSeat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtobufGen.PlayReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWillCallBossSeat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWillCallBossSeat(ResWillCallBossSeat other) : this() {
      willCallBossSeat_ = other.willCallBossSeat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResWillCallBossSeat Clone() {
      return new ResWillCallBossSeat(this);
    }

    /// <summary>Field number for the "willCallBossSeat" field.</summary>
    public const int WillCallBossSeatFieldNumber = 1;
    private int willCallBossSeat_;
    /// <summary>
    ///将要叫地主座次
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WillCallBossSeat {
      get { return willCallBossSeat_; }
      set {
        willCallBossSeat_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResWillCallBossSeat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResWillCallBossSeat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WillCallBossSeat != other.WillCallBossSeat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WillCallBossSeat != 0) hash ^= WillCallBossSeat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WillCallBossSeat != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(WillCallBossSeat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WillCallBossSeat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WillCallBossSeat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResWillCallBossSeat other) {
      if (other == null) {
        return;
      }
      if (other.WillCallBossSeat != 0) {
        WillCallBossSeat = other.WillCallBossSeat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WillCallBossSeat = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///请求叫地主或不叫地主
  /// </summary>
  public sealed partial class ReqCallBoss : pb::IMessage<ReqCallBoss> {
    private static readonly pb::MessageParser<ReqCallBoss> _parser = new pb::MessageParser<ReqCallBoss>(() => new ReqCallBoss());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqCallBoss> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtobufGen.PlayReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqCallBoss() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqCallBoss(ReqCallBoss other) : this() {
      reqCode_ = other.reqCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqCallBoss Clone() {
      return new ReqCallBoss(this);
    }

    /// <summary>Field number for the "reqCode" field.</summary>
    public const int ReqCodeFieldNumber = 1;
    private int reqCode_;
    /// <summary>
    ///叫地主或不叫（1 叫地主 2 不叫）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReqCode {
      get { return reqCode_; }
      set {
        reqCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqCallBoss);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqCallBoss other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReqCode != other.ReqCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReqCode != 0) hash ^= ReqCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReqCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ReqCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReqCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReqCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqCallBoss other) {
      if (other == null) {
        return;
      }
      if (other.ReqCode != 0) {
        ReqCode = other.ReqCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ReqCode = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///下发叫地主或不叫地主
  /// </summary>
  public sealed partial class ResCallBoss : pb::IMessage<ResCallBoss> {
    private static readonly pb::MessageParser<ResCallBoss> _parser = new pb::MessageParser<ResCallBoss>(() => new ResCallBoss());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResCallBoss> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtobufGen.PlayReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResCallBoss() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResCallBoss(ResCallBoss other) : this() {
      seat_ = other.seat_;
      resCode_ = other.resCode_;
      bossSeat_ = other.bossSeat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResCallBoss Clone() {
      return new ResCallBoss(this);
    }

    /// <summary>Field number for the "seat" field.</summary>
    public const int SeatFieldNumber = 1;
    private int seat_;
    /// <summary>
    ///请求的玩家的座次
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Seat {
      get { return seat_; }
      set {
        seat_ = value;
      }
    }

    /// <summary>Field number for the "resCode" field.</summary>
    public const int ResCodeFieldNumber = 2;
    private int resCode_;
    /// <summary>
    ///叫地主或不叫（1 叫地主 2 不叫）
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ResCode {
      get { return resCode_; }
      set {
        resCode_ = value;
      }
    }

    /// <summary>Field number for the "bossSeat" field.</summary>
    public const int BossSeatFieldNumber = 3;
    private int bossSeat_;
    /// <summary>
    ///地主座次，未确定为-1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BossSeat {
      get { return bossSeat_; }
      set {
        bossSeat_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResCallBoss);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResCallBoss other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seat != other.Seat) return false;
      if (ResCode != other.ResCode) return false;
      if (BossSeat != other.BossSeat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Seat != 0) hash ^= Seat.GetHashCode();
      if (ResCode != 0) hash ^= ResCode.GetHashCode();
      if (BossSeat != 0) hash ^= BossSeat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Seat != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Seat);
      }
      if (ResCode != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ResCode);
      }
      if (BossSeat != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(BossSeat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Seat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seat);
      }
      if (ResCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResCode);
      }
      if (BossSeat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BossSeat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResCallBoss other) {
      if (other == null) {
        return;
      }
      if (other.Seat != 0) {
        Seat = other.Seat;
      }
      if (other.ResCode != 0) {
        ResCode = other.ResCode;
      }
      if (other.BossSeat != 0) {
        BossSeat = other.BossSeat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seat = input.ReadInt32();
            break;
          }
          case 16: {
            ResCode = input.ReadInt32();
            break;
          }
          case 24: {
            BossSeat = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///下发底牌
  /// </summary>
  public sealed partial class ResHoldCard : pb::IMessage<ResHoldCard> {
    private static readonly pb::MessageParser<ResHoldCard> _parser = new pb::MessageParser<ResHoldCard>(() => new ResHoldCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResHoldCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtobufGen.PlayReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResHoldCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResHoldCard(ResHoldCard other) : this() {
      holeCards_ = other.holeCards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResHoldCard Clone() {
      return new ResHoldCard(this);
    }

    /// <summary>Field number for the "holeCards" field.</summary>
    public const int HoleCardsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_holeCards_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> holeCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///底牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> HoleCards {
      get { return holeCards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResHoldCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResHoldCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!holeCards_.Equals(other.holeCards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= holeCards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      holeCards_.WriteTo(output, _repeated_holeCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += holeCards_.CalculateSize(_repeated_holeCards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResHoldCard other) {
      if (other == null) {
        return;
      }
      holeCards_.Add(other.holeCards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            holeCards_.AddEntriesFrom(input, _repeated_holeCards_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///下发出牌座次
  /// </summary>
  public sealed partial class ResPushSeat : pb::IMessage<ResPushSeat> {
    private static readonly pb::MessageParser<ResPushSeat> _parser = new pb::MessageParser<ResPushSeat>(() => new ResPushSeat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResPushSeat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtobufGen.PlayReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResPushSeat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResPushSeat(ResPushSeat other) : this() {
      seat_ = other.seat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResPushSeat Clone() {
      return new ResPushSeat(this);
    }

    /// <summary>Field number for the "seat" field.</summary>
    public const int SeatFieldNumber = 1;
    private int seat_;
    /// <summary>
    ///座次
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Seat {
      get { return seat_; }
      set {
        seat_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResPushSeat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResPushSeat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seat != other.Seat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Seat != 0) hash ^= Seat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Seat != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Seat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Seat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResPushSeat other) {
      if (other == null) {
        return;
      }
      if (other.Seat != 0) {
        Seat = other.Seat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seat = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///请求出牌
  /// </summary>
  public sealed partial class ReqPushCard : pb::IMessage<ReqPushCard> {
    private static readonly pb::MessageParser<ReqPushCard> _parser = new pb::MessageParser<ReqPushCard>(() => new ReqPushCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqPushCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtobufGen.PlayReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqPushCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqPushCard(ReqPushCard other) : this() {
      pushCards_ = other.pushCards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqPushCard Clone() {
      return new ReqPushCard(this);
    }

    /// <summary>Field number for the "pushCards" field.</summary>
    public const int PushCardsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_pushCards_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> pushCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///出的牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PushCards {
      get { return pushCards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqPushCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqPushCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pushCards_.Equals(other.pushCards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pushCards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pushCards_.WriteTo(output, _repeated_pushCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pushCards_.CalculateSize(_repeated_pushCards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqPushCard other) {
      if (other == null) {
        return;
      }
      pushCards_.Add(other.pushCards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18:
          case 16: {
            pushCards_.AddEntriesFrom(input, _repeated_pushCards_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///下发出牌
  /// </summary>
  public sealed partial class ResPushCard : pb::IMessage<ResPushCard> {
    private static readonly pb::MessageParser<ResPushCard> _parser = new pb::MessageParser<ResPushCard>(() => new ResPushCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResPushCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtobufGen.PlayReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResPushCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResPushCard(ResPushCard other) : this() {
      seat_ = other.seat_;
      pushCards_ = other.pushCards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResPushCard Clone() {
      return new ResPushCard(this);
    }

    /// <summary>Field number for the "seat" field.</summary>
    public const int SeatFieldNumber = 1;
    private int seat_;
    /// <summary>
    ///出牌的座次
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Seat {
      get { return seat_; }
      set {
        seat_ = value;
      }
    }

    /// <summary>Field number for the "pushCards" field.</summary>
    public const int PushCardsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_pushCards_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> pushCards_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///出的牌
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> PushCards {
      get { return pushCards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResPushCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResPushCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seat != other.Seat) return false;
      if(!pushCards_.Equals(other.pushCards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Seat != 0) hash ^= Seat.GetHashCode();
      hash ^= pushCards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Seat != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Seat);
      }
      pushCards_.WriteTo(output, _repeated_pushCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Seat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seat);
      }
      size += pushCards_.CalculateSize(_repeated_pushCards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResPushCard other) {
      if (other == null) {
        return;
      }
      if (other.Seat != 0) {
        Seat = other.Seat;
      }
      pushCards_.Add(other.pushCards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seat = input.ReadInt32();
            break;
          }
          case 26:
          case 24: {
            pushCards_.AddEntriesFrom(input, _repeated_pushCards_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///请求不出
  /// </summary>
  public sealed partial class ReqPassCard : pb::IMessage<ReqPassCard> {
    private static readonly pb::MessageParser<ReqPassCard> _parser = new pb::MessageParser<ReqPassCard>(() => new ReqPassCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReqPassCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtobufGen.PlayReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqPassCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqPassCard(ReqPassCard other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReqPassCard Clone() {
      return new ReqPassCard(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReqPassCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReqPassCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReqPassCard other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///下发不出
  /// </summary>
  public sealed partial class ResPassCard : pb::IMessage<ResPassCard> {
    private static readonly pb::MessageParser<ResPassCard> _parser = new pb::MessageParser<ResPassCard>(() => new ResPassCard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResPassCard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtobufGen.PlayReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResPassCard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResPassCard(ResPassCard other) : this() {
      seat_ = other.seat_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResPassCard Clone() {
      return new ResPassCard(this);
    }

    /// <summary>Field number for the "seat" field.</summary>
    public const int SeatFieldNumber = 1;
    private int seat_;
    /// <summary>
    ///不出的座次
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Seat {
      get { return seat_; }
      set {
        seat_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResPassCard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResPassCard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Seat != other.Seat) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Seat != 0) hash ^= Seat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Seat != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Seat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Seat != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResPassCard other) {
      if (other == null) {
        return;
      }
      if (other.Seat != 0) {
        Seat = other.Seat;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Seat = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///下发游戏结束
  /// </summary>
  public sealed partial class ResGameOver : pb::IMessage<ResGameOver> {
    private static readonly pb::MessageParser<ResGameOver> _parser = new pb::MessageParser<ResGameOver>(() => new ResGameOver());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResGameOver> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtobufGen.PlayReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResGameOver() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResGameOver(ResGameOver other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResGameOver Clone() {
      return new ResGameOver(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResGameOver);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResGameOver other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResGameOver other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
